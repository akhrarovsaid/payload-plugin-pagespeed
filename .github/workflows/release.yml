name: release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-24.04

    permissions:
      contents: write
      id-token: write
      pull-requests: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Create .npmrc
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Determine next version
        id: next_version
        run: |
          NEXT_VERSION=$(npx semantic-release --dry-run --no-ci | grep "The next release version is" | awk '{print $6}')
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "Next version: $NEXT_VERSION"

      - name: Bump version files
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          npm version $NEXT_VERSION --no-git-tag-version
          pnpm install --frozen-lockfile

      - name: Create Release PR
        id: release_pr
        if: ${{ github.event.inputs.dry_run != 'true' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.RELEASE_PAT }}
          commit-message: "chore: bump version to $NEXT_VERSION [skip ci]"
          branch: release/$NEXT_VERSION
          title: "Release $NEXT_VERSION"
          body: "This PR bumps the package version to $NEXT_VERSION."
          base: main
          labels: release

      - name: Enable Pull Request Automerge
        run: gh pr merge ${{ steps.release_pr.outputs.pull-request-number }} --merge --auto
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PAT }}

      - name: Publish release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            npx semantic-release --dry-run
          else
            npx semantic-release
          fi
